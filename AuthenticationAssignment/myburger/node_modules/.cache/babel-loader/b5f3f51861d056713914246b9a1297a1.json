{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread\";\nimport * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility';\nvar initialState = {\n  orders: [],\n  loading: false,\n  purchased: false\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actionTypes.PURCHASE_INIT:\n      return updateObject(state, {\n        purchased: false\n      });\n\n    case actionTypes.PURCHASE_BURGER_START:\n      return updateObject(state, {\n        loading: true\n      });\n\n    case actionTypes.PURCHASE_BURGER_SUCCESS:\n      var newOrder = _objectSpread({}, action.orderData, {\n        id: action.orderId\n      });\n\n      return _objectSpread({}, state, {\n        loading: false,\n        purchased: true,\n        orders: state.orders.concat(newOrder)\n      });\n\n    case actionTypes.PURCHASE_BURGER_FAIL:\n      return _objectSpread({}, state, {\n        loading: false\n      });\n\n    case actionTypes.FETCH_ORDERS_START:\n      return _objectSpread({}, state, {\n        loading: true\n      });\n\n    case actionTypes.FETCH_ORDERS_SUCCESS:\n      return _objectSpread({}, state, {\n        orders: action.orders,\n        loading: false\n      });\n\n    case actionTypes.FETCH_ORDERS_FAIL:\n      return _objectSpread({}, state, {\n        loading: false\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["E:/ReactProjects/myburger/src/store/reducers/order.js"],"names":["actionTypes","updateObject","initialState","orders","loading","purchased","reducer","state","action","type","PURCHASE_INIT","PURCHASE_BURGER_START","PURCHASE_BURGER_SUCCESS","newOrder","orderData","id","orderId","concat","PURCHASE_BURGER_FAIL","FETCH_ORDERS_START","FETCH_ORDERS_SUCCESS","FETCH_ORDERS_FAIL"],"mappings":";AAAA,OAAO,KAAKA,WAAZ,MAA6B,wBAA7B;AACA,SAAQC,YAAR,QAA2B,YAA3B;AAEA,IAAMC,YAAY,GAAC;AACfC,EAAAA,MAAM,EAAC,EADQ;AAEfC,EAAAA,OAAO,EAAC,KAFO;AAGfC,EAAAA,SAAS,EAAE;AAHI,CAAnB;;AAKA,IAAMC,OAAO,GAAC,SAARA,OAAQ,GAA6B;AAAA,MAA5BC,KAA4B,uEAAtBL,YAAsB;AAAA,MAATM,MAAS;;AACnC,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKT,WAAW,CAACU,aAAjB;AACI,aAAOT,YAAY,CAACM,KAAD,EAAO;AAACF,QAAAA,SAAS,EAAC;AAAX,OAAP,CAAnB;;AAEJ,SAAKL,WAAW,CAACW,qBAAjB;AACI,aAAOV,YAAY,CAACM,KAAD,EAAO;AAACH,QAAAA,OAAO,EAAC;AAAT,OAAP,CAAnB;;AAEJ,SAAKJ,WAAW,CAACY,uBAAjB;AACA,UAAMC,QAAQ,qBACPL,MAAM,CAACM,SADA;AAEVC,QAAAA,EAAE,EAACP,MAAM,CAACQ;AAFA,QAAd;;AAIA,+BACWT,KADX;AAEQH,QAAAA,OAAO,EAAC,KAFhB;AAGQC,QAAAA,SAAS,EAAC,IAHlB;AAIQF,QAAAA,MAAM,EAACI,KAAK,CAACJ,MAAN,CAAac,MAAb,CAAoBJ,QAApB;AAJf;;AAMA,SAAKb,WAAW,CAACkB,oBAAjB;AACI,+BACOX,KADP;AAEIH,QAAAA,OAAO,EAAC;AAFZ;;AAKJ,SAAKJ,WAAW,CAACmB,kBAAjB;AACI,+BACOZ,KADP;AAEIH,QAAAA,OAAO,EAAC;AAFZ;;AAIJ,SAAKJ,WAAW,CAACoB,oBAAjB;AACI,+BACOb,KADP;AAEIJ,QAAAA,MAAM,EAACK,MAAM,CAACL,MAFlB;AAGIC,QAAAA,OAAO,EAAC;AAHZ;;AAKJ,SAAKJ,WAAW,CAACqB,iBAAjB;AACI,+BACOd,KADP;AAEIH,QAAAA,OAAO,EAAC;AAFZ;;AAIJ;AACI,aAAOG,KAAP;AAzCR;AA2CP,CA5CD;;AA+CA,eAAeD,OAAf","sourcesContent":["import * as actionTypes from '../actions/actionTypes';\r\nimport {updateObject} from '../utility';\r\n\r\nconst initialState={\r\n    orders:[],\r\n    loading:false,\r\n    purchased: false\r\n};\r\nconst reducer=(state=initialState,action)=>{\r\n        switch(action.type){\r\n            case actionTypes.PURCHASE_INIT:\r\n                return updateObject(state,{purchased:false});\r\n\r\n            case actionTypes.PURCHASE_BURGER_START:\r\n                return updateObject(state,{loading:true});\r\n                \r\n            case actionTypes.PURCHASE_BURGER_SUCCESS:\r\n            const newOrder = {\r\n                ...action.orderData,\r\n                id:action.orderId\r\n            }    \r\n            return{\r\n                    ...state,\r\n                    loading:false,\r\n                    purchased:true,\r\n                    orders:state.orders.concat(newOrder)\r\n                };\r\n            case actionTypes.PURCHASE_BURGER_FAIL:\r\n                return{\r\n                    ...state,\r\n                    loading:false\r\n\r\n                };\r\n            case actionTypes.FETCH_ORDERS_START:\r\n                return{\r\n                    ...state,\r\n                    loading:true\r\n                };\r\n            case actionTypes.FETCH_ORDERS_SUCCESS:\r\n                return{\r\n                    ...state,\r\n                    orders:action.orders,\r\n                    loading:false\r\n                };\r\n            case actionTypes.FETCH_ORDERS_FAIL:\r\n                return{\r\n                    ...state,\r\n                    loading:false\r\n                };\r\n            default:\r\n                return state;\r\n        }\r\n};\r\n\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}