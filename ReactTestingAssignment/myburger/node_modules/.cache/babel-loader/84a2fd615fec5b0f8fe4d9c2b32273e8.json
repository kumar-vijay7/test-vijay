{"ast":null,"code":"import axios from 'axios';\nimport * as actionTypes from './actionTypes';\nexport var authStart = function authStart() {\n  return {\n    type: actionTypes.AUTH_START\n  };\n};\nexport var authSuccess = function authSuccess(token, userId) {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    idToken: token,\n    userId: userId\n  };\n};\nexport var authFail = function authFail(error) {\n  return {\n    type: actionTypes.AUTH_FAIL,\n    error: error\n  };\n};\nexport var logout = function logout() {\n  return {\n    type: actionTypes.AUTH_LOGOUT\n  };\n};\nexport var checkAuthTimeout = function checkAuthTimeout(expirationTime) {\n  return function (dispatch) {\n    setTimeout(function () {\n      dispatch(logout());\n    }, expirationTime);\n  };\n};\nexport var auth = function auth(email, password, issignup) {\n  return function (dispatch) {\n    dispatch(authStart());\n    var authData = {\n      email: email,\n      password: password,\n      returnSecureToken: true\n    };\n    var url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyAcGRjmw_Sv8flmvbuDwzMn3G9_wlFG7PE';\n\n    if (!issignup) {\n      url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyAcGRjmw_Sv8flmvbuDwzMn3G9_wlFG7PE';\n    }\n\n    axios.post(url, authData).then(function (response) {\n      console.log(response);\n      dispatch(authSuccess(response.data.idToken, response.data.localId));\n      dispatch(checkAuthTimeout(response.data.expiresIn));\n    }).catch(function (err) {\n      console.log(err);\n      dispatch(authFail(err.response.data.error));\n    });\n  };\n};","map":{"version":3,"sources":["E:/ReactProjects/myburger/src/store/actions/auth.js"],"names":["axios","actionTypes","authStart","type","AUTH_START","authSuccess","token","userId","AUTH_SUCCESS","idToken","authFail","error","AUTH_FAIL","logout","AUTH_LOGOUT","checkAuthTimeout","expirationTime","dispatch","setTimeout","auth","email","password","issignup","authData","returnSecureToken","url","post","then","response","console","log","data","localId","expiresIn","catch","err"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,WAAZ,MAA6B,eAA7B;AAEA,OAAO,IAAMC,SAAS,GAAC,SAAVA,SAAU,GAAI;AAC1B,SAAO;AACHC,IAAAA,IAAI,EAACF,WAAW,CAACG;AADd,GAAP;AAGA,CAJM;AAMP,OAAO,IAAMC,WAAW,GAAE,SAAbA,WAAa,CAACC,KAAD,EAAOC,MAAP,EAAiB;AACvC,SAAO;AACHJ,IAAAA,IAAI,EAACF,WAAW,CAACO,YADd;AAEHC,IAAAA,OAAO,EAACH,KAFL;AAGHC,IAAAA,MAAM,EAAEA;AAHL,GAAP;AAKH,CANM;AAQP,OAAO,IAAMG,QAAQ,GAAE,SAAVA,QAAU,CAACC,KAAD,EAAS;AAC5B,SAAM;AACFR,IAAAA,IAAI,EAAGF,WAAW,CAACW,SADjB;AAEFD,IAAAA,KAAK,EAACA;AAFJ,GAAN;AAIH,CALM;AAMP,OAAO,IAAME,MAAM,GAAC,SAAPA,MAAO,GAAI;AACpB,SAAM;AACFV,IAAAA,IAAI,EAACF,WAAW,CAACa;AADf,GAAN;AAGH,CAJM;AAMP,OAAO,IAAMC,gBAAgB,GAAC,SAAjBA,gBAAiB,CAACC,cAAD,EAAkB;AAC5C,SAAO,UAAAC,QAAQ,EAAE;AACVC,IAAAA,UAAU,CAAC,YAAI;AACXD,MAAAA,QAAQ,CAACJ,MAAM,EAAP,CAAR;AACH,KAFS,EAERG,cAFQ,CAAV;AAGN,GAJD;AAKH,CANM;AAQP,OAAO,IAAMG,IAAI,GAAE,SAANA,IAAM,CAACC,KAAD,EAAOC,QAAP,EAAgBC,QAAhB,EAA2B;AAC1C,SAAO,UAAAL,QAAQ,EAAG;AACdA,IAAAA,QAAQ,CAACf,SAAS,EAAV,CAAR;AACL,QAAOqB,QAAQ,GAAC;AACPH,MAAAA,KAAK,EAACA,KADC;AAEPC,MAAAA,QAAQ,EAACA,QAFF;AAGPG,MAAAA,iBAAiB,EAAC;AAHX,KAAhB;AAMK,QAAIC,GAAG,GAAC,uGAAR;;AACA,QAAG,CAACH,QAAJ,EAAa;AACTG,MAAAA,GAAG,GAAC,mHAAJ;AACF;;AACFzB,IAAAA,KAAK,CAAC0B,IAAN,CAAWD,GAAX,EAAeF,QAAf,EACCI,IADD,CACM,UAAAC,QAAQ,EAAE;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAX,MAAAA,QAAQ,CAACZ,WAAW,CAACuB,QAAQ,CAACG,IAAT,CAActB,OAAf,EAAuBmB,QAAQ,CAACG,IAAT,CAAcC,OAArC,CAAZ,CAAR;AACAf,MAAAA,QAAQ,CAACF,gBAAgB,CAACa,QAAQ,CAACG,IAAT,CAAcE,SAAf,CAAjB,CAAR;AACH,KALD,EAMCC,KAND,CAMO,UAAAC,GAAG,EAAE;AACRN,MAAAA,OAAO,CAACC,GAAR,CAAYK,GAAZ;AACAlB,MAAAA,QAAQ,CAACP,QAAQ,CAACyB,GAAG,CAACP,QAAJ,CAAaG,IAAb,CAAkBpB,KAAnB,CAAT,CAAR;AACH,KATD;AAUH,GAtBD;AAuBH,CAxBM","sourcesContent":["import axios from 'axios';\r\nimport * as actionTypes from './actionTypes';\r\n\r\nexport const authStart=()=>{\r\n return {\r\n     type:actionTypes.AUTH_START\r\n };\r\n};\r\n\r\nexport const authSuccess= (token,userId) =>{\r\n    return {\r\n        type:actionTypes.AUTH_SUCCESS,\r\n        idToken:token,\r\n        userId: userId\r\n    };\r\n};\r\n\r\nexport const authFail =(error)=>{\r\n    return{\r\n        type : actionTypes.AUTH_FAIL,\r\n        error:error\r\n    };\r\n};\r\nexport const logout=()=>{\r\n    return{\r\n        type:actionTypes.AUTH_LOGOUT \r\n    };\r\n};\r\n\r\nexport const checkAuthTimeout=(expirationTime)=>{\r\n    return dispatch=>{\r\n           setTimeout(()=>{\r\n               dispatch(logout());\r\n           },expirationTime)\r\n    };\r\n};\r\n\r\nexport const auth= (email,password,issignup)=>{\r\n    return dispatch=> {\r\n        dispatch(authStart());\r\n   const  authData={\r\n            email:email,\r\n            password:password,\r\n            returnSecureToken:true\r\n\r\n        };\r\n        let url='https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyAcGRjmw_Sv8flmvbuDwzMn3G9_wlFG7PE';\r\n        if(!issignup){\r\n            url='https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyAcGRjmw_Sv8flmvbuDwzMn3G9_wlFG7PE';\r\n         }\r\n        axios.post(url,authData)\r\n        .then(response=>{\r\n            console.log(response);\r\n            dispatch(authSuccess(response.data.idToken,response.data.localId));\r\n            dispatch(checkAuthTimeout(response.data.expiresIn));\r\n        })\r\n        .catch(err=>{\r\n            console.log(err);\r\n            dispatch(authFail(err.response.data.error));\r\n        })\r\n    };\r\n};"]},"metadata":{},"sourceType":"module"}