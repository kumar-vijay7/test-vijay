{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"E:\\\\ReactProjects\\\\myburger\\\\src\\\\containers\\\\BurgerBuilder\\\\BurgerBuilder.js\";\nimport React, { Component } from 'react';\nimport Aux from '../../hoc/Auxx/Auxx';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport axios from '../../axios-orders';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport withErrorHandler from '../../hoc/WithErrorHandler/withErrorHandler';\nvar INGREDIENT_PRICES = {\n  salad: 0.5,\n  cheese: 0.4,\n  meat: 1.3,\n  bacon: 0.7\n};\n\nvar BurgerBuilder = /*#__PURE__*/function (_Component) {\n  _inherits(BurgerBuilder, _Component);\n\n  function BurgerBuilder() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, BurgerBuilder);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(BurgerBuilder)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      ingredients: null,\n      totalPrice: 4,\n      purchasable: false,\n      purchasing: false,\n      loading: false,\n      error: false\n    };\n\n    _this.updatePurchasedState = function () {\n      var ingredients = _objectSpread({}, _this.state.ingredients);\n\n      var sum = Object.keys(ingredients).map(function (igkey) {\n        return ingredients[igkey];\n      }).reduce(function (sum, el) {\n        return sum + el;\n      }, 0);\n\n      _this.setState({\n        purchasable: sum > 0\n      });\n    };\n\n    _this.addIngredientHandler = function (type) {\n      var oldCount = _this.state.ingredients[type];\n      var updatedCount = oldCount + 1;\n\n      var updatedIngredients = _objectSpread({}, _this.state.ingredients);\n\n      updatedIngredients[type] = updatedCount;\n      var priceAddition = INGREDIENT_PRICES[type];\n      var oldPrice = _this.state.totalPrice;\n      var newPrice = oldPrice + priceAddition;\n\n      _this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredients\n      });\n\n      _this.updatePurchasedState(updatedIngredients);\n    };\n\n    _this.removeIngredientHandler = function (type) {\n      var oldCount = _this.state.ingredients[type];\n\n      if (oldCount <= 0) {\n        return;\n      }\n\n      var updatedCount = oldCount - 1;\n\n      var updatedIngredients = _objectSpread({}, _this.state.ingredients);\n\n      updatedIngredients[type] = updatedCount;\n      var priceDeduction = INGREDIENT_PRICES[type];\n      var oldPrice = _this.state.totalPrice;\n      var newPrice = oldPrice - priceDeduction;\n\n      _this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredients\n      });\n\n      _this.updatePurchasedState(updatedIngredients);\n    };\n\n    _this.purchaseHandler = function () {\n      _this.setState({\n        purchasing: true\n      });\n    };\n\n    _this.purchaseCancelHandler = function () {\n      _this.setState({\n        purchasing: false\n      });\n    };\n\n    _this.purchaseContinueHandler = function () {\n      //     this.setState({loading:true});\n      //     const order={\n      //         ingredients:this.state.ingredients,\n      //         price:this.state.totalPrice,\n      //         customer:{\n      //             name:'Vijay Kumar',\n      //             address:{\n      //                 street:'test',\n      //                 zipCode:'12345',\n      //                 country:'India'\n      //             },\n      //             deliveryMethod:'fastest'\n      //         }\n      //     }\n      //  axios.post('/orders.json',order)\n      //      .then(response=>{\n      //          this.setState({loading:false, purchasing: false});\n      //      })\n      //      .catch(error=>{\n      //         this.setState({loading:false,purchasing: false});\n      //      });\n      var queryparams = [];\n\n      _this.props.history.push({\n        pathname: '/checkout'\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(BurgerBuilder, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      axios.get('https://myburger-25367.firebaseio.com/ingredients.json').then(function (response) {\n        _this2.setState({\n          ingredients: response.data\n        });\n      }).catch(function (error) {\n        _this2.setState({\n          error: true\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var disabledInfo = _objectSpread({}, this.state.ingredients);\n\n      for (var key in disabledInfo) {\n        disabledInfo[key] = disabledInfo[key] <= 0;\n      }\n\n      var orderSummary = null;\n      var burger = this.state.error ? /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 37\n        }\n      }, \"Ingredients can`t be loaded!\") : /*#__PURE__*/React.createElement(Spinner, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 73\n        }\n      });\n\n      if (this.state.ingredients) {\n        burger = /*#__PURE__*/React.createElement(Aux, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(Burger, {\n          ingredients: this.state.ingredients,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 17\n          }\n        }), /*#__PURE__*/React.createElement(BuildControls, {\n          ingredientAdded: this.addIngredientHandler,\n          ingredientRemoved: this.removeIngredientHandler,\n          disabled: disabledInfo,\n          purchasable: this.state.purchasable,\n          ordered: this.purchaseHandler,\n          price: this.state.totalPrice,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 17\n          }\n        }));\n        orderSummary = /*#__PURE__*/React.createElement(OrderSummary, {\n          ingredients: this.state.ingredients,\n          price: this.state.totalPrice,\n          purchaseCanceled: this.purchaseCancelHandler,\n          purchaseContinue: this.purchaseContinueHandler,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 31\n          }\n        });\n      }\n\n      if (this.state.loading) {\n        orderSummary = /*#__PURE__*/React.createElement(Spinner, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 26\n          }\n        });\n      }\n\n      return /*#__PURE__*/React.createElement(Aux, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Modal, {\n        show: this.state.purchasing,\n        modalClosed: this.purchaseCancelHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 17\n        }\n      }, orderSummary), burger);\n    }\n  }]);\n\n  return BurgerBuilder;\n}(Component);\n\nexport default withErrorHandler(BurgerBuilder, axios);","map":{"version":3,"sources":["E:/ReactProjects/myburger/src/containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","Component","Aux","Burger","BuildControls","Modal","OrderSummary","axios","Spinner","withErrorHandler","INGREDIENT_PRICES","salad","cheese","meat","bacon","BurgerBuilder","state","ingredients","totalPrice","purchasable","purchasing","loading","error","updatePurchasedState","sum","Object","keys","map","igkey","reduce","el","setState","addIngredientHandler","type","oldCount","updatedCount","updatedIngredients","priceAddition","oldPrice","newPrice","removeIngredientHandler","priceDeduction","purchaseHandler","purchaseCancelHandler","purchaseContinueHandler","queryparams","props","history","push","pathname","get","then","response","data","catch","disabledInfo","key","orderSummary","burger"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport Aux from '../../hoc/Auxx/Auxx'\r\nimport Burger from '../../components/Burger/Burger'\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls'\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\r\nimport axios from '../../axios-orders';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport withErrorHandler from '../../hoc/WithErrorHandler/withErrorHandler';\r\n\r\nconst INGREDIENT_PRICES={\r\n    salad:0.5,\r\n    cheese:0.4,\r\n    meat:1.3,\r\n    bacon:0.7\r\n}; \r\nclass BurgerBuilder extends Component {\r\n    state={\r\n        ingredients:null,\r\n        totalPrice:4,\r\n        purchasable:false,\r\n        purchasing:false,\r\n        loading:false,\r\n        error:false\r\n    }\r\n    componentDidMount(){\r\n\r\n        axios.get('https://myburger-25367.firebaseio.com/ingredients.json')\r\n            .then(response=>{\r\n                this.setState({\r\n                    ingredients:response.data\r\n                })\r\n            }).catch(error=>{\r\n                this.setState({error:true});\r\n            });\r\n    }\r\n    updatePurchasedState=()=>{\r\n        const ingredients={\r\n            ...this.state.ingredients\r\n        };\r\n        const sum=Object.keys(ingredients)\r\n        .map(igkey=>{\r\n        return ingredients[igkey];\r\n        }).reduce((sum,el)=>{\r\n            return sum+el;\r\n        },0);\r\n        this.setState({purchasable:sum>0});\r\n    }\r\n    addIngredientHandler=(type)=>{\r\n        const oldCount=this.state.ingredients[type];\r\n        const updatedCount=oldCount+1;\r\n        const updatedIngredients={\r\n            ...this.state.ingredients\r\n        };\r\n        updatedIngredients[type]=updatedCount;\r\n        const priceAddition=INGREDIENT_PRICES[type];\r\n        const oldPrice=this.state.totalPrice;\r\n        const newPrice=oldPrice+priceAddition;\r\n        this.setState({\r\n            totalPrice:newPrice,\r\n            ingredients:updatedIngredients\r\n        });     \r\n        this.updatePurchasedState(updatedIngredients);   \r\n    }\r\n\r\n    removeIngredientHandler=(type)=>{\r\n        const oldCount=this.state.ingredients[type];\r\n        if(oldCount<=0){\r\n            return;  \r\n        }\r\n        const updatedCount=oldCount-1;\r\n        const updatedIngredients={\r\n            ...this.state.ingredients\r\n        };\r\n        updatedIngredients[type]=updatedCount;\r\n        const priceDeduction=INGREDIENT_PRICES[type];\r\n        const oldPrice=this.state.totalPrice;\r\n        const newPrice=oldPrice-priceDeduction;\r\n        this.setState({\r\n            totalPrice:newPrice,\r\n            ingredients:updatedIngredients\r\n        });     \r\n        this.updatePurchasedState(updatedIngredients);\r\n    }\r\n\r\n    purchaseHandler=()=>{\r\n        this.setState({purchasing:true})\r\n    }\r\n\r\n    purchaseCancelHandler=()=>{\r\n        this.setState({purchasing:false})\r\n    }\r\n\r\n    purchaseContinueHandler=()=>{\r\n    //     this.setState({loading:true});\r\n    //     const order={\r\n    //         ingredients:this.state.ingredients,\r\n    //         price:this.state.totalPrice,\r\n    //         customer:{\r\n    //             name:'Vijay Kumar',\r\n    //             address:{\r\n    //                 street:'test',\r\n    //                 zipCode:'12345',\r\n    //                 country:'India'\r\n    //             },\r\n    //             deliveryMethod:'fastest'\r\n    //         }\r\n    //     }\r\n    //  axios.post('/orders.json',order)\r\n    //      .then(response=>{\r\n    //          this.setState({loading:false, purchasing: false});\r\n    //      })\r\n    //      .catch(error=>{\r\n    //         this.setState({loading:false,purchasing: false});\r\n    //      });\r\n\r\n    const queryparams=[];\r\n    this.props.history.push({\r\n        pathname:'/checkout'});\r\n    }\r\n    render() {\r\n        const disabledInfo={\r\n            ...this.state.ingredients\r\n        };\r\n        for(let key in disabledInfo){\r\n            disabledInfo[key]=disabledInfo[key]<=0\r\n        }\r\n\r\n        let orderSummary=null;\r\n        let burger=this.state.error?<p>Ingredients can`t be loaded!</p>:<Spinner/>\r\n        if(this.state.ingredients){\r\n            burger=(\r\n                <Aux>\r\n                <Burger ingredients={this.state.ingredients}/>\r\n                <BuildControls \r\n                ingredientAdded={this.addIngredientHandler}\r\n                ingredientRemoved={this.removeIngredientHandler}\r\n                disabled={disabledInfo}\r\n                purchasable={this.state.purchasable}\r\n                ordered={this.purchaseHandler}\r\n                price={this.state.totalPrice}/>\r\n                </Aux>\r\n                );\r\n                orderSummary= <OrderSummary \r\n        ingredients={this.state.ingredients}\r\n        price={this.state.totalPrice}\r\n        purchaseCanceled={this.purchaseCancelHandler}\r\n        purchaseContinue={this.purchaseContinueHandler}/>;\r\n        }\r\n        if(this.state.loading){\r\n\r\n            orderSummary=<Spinner />;\r\n\r\n    }\r\n        \r\n        return (\r\n            <Aux>\r\n                <Modal show={this.state.purchasing}\r\n                modalClosed={this.purchaseCancelHandler}>\r\n                   {orderSummary}\r\n                </Modal>\r\n                {burger}\r\n            </Aux>\r\n        )\r\n    };\r\n}\r\n\r\n\r\nexport default withErrorHandler(BurgerBuilder,axios);\r\n"]},"metadata":{},"sourceType":"module"}