{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility';\nvar initialState = {\n  ingredients: null,\n  totalPrice: 4,\n  error: false,\n  building: false\n};\nvar INGREDIENT_PRICES = {\n  salad: 0.5,\n  cheese: 0.4,\n  meat: 1.3,\n  bacon: 0.7\n};\n\nvar addIngredients = function addIngredients(state, action) {\n  var updatedIngredients = _defineProperty({}, action.ingredientName, state.ingredients[action.ingredientName] + 1);\n\n  var updatedIngreidents = updateObject(state.ingredients, updatedIngredients);\n  var updatedState = {\n    ingredients: updatedIngreidents,\n    totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName],\n    building: true\n  };\n  return updateObject(state, updatedState);\n};\n\nvar removeIngredients = function removeIngredients(state, action) {\n  var updatedIng = _defineProperty({}, action.ingredientName, state.ingredients[action.ingredientName] - 1);\n\n  var updatedIngs = updateObject(state.ingredients, updatedIng);\n  var updatedSt = {\n    ingredients: updatedIngs,\n    totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName],\n    building: true\n  };\n  return updateObject(state, updatedSt);\n};\n\nvar setIngredients = function setIngredients(state, action) {\n  return updateObject(state, {\n    ingredients: {\n      salad: action.ingredients.salad,\n      bacon: action.ingredients.bacon,\n      cheese: action.ingredients.cheese,\n      meat: action.ingredients.meat\n    },\n    totalPrice: 4,\n    error: false\n  });\n};\n\nvar fetchIngredientFail = function fetchIngredientFail(state, action) {\n  return updateObject(state, {\n    error: true\n  });\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actionTypes.ADD_INGREDIENTS:\n      return addIngredients(state, action);\n\n    case actionTypes.REMOVE_INGREDIENTS:\n      return removeIngredients(state, action);\n\n    case actionTypes.SET_INGREDIENTS:\n      return setIngredients(state, action);\n\n    case actionTypes.FETCH_INGREDIENTS_FAILED:\n      return fetchIngredientFail(state, action);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["E:/ReactProjects/myburger/src/store/reducers/burgerBuilder.js"],"names":["actionTypes","updateObject","initialState","ingredients","totalPrice","error","building","INGREDIENT_PRICES","salad","cheese","meat","bacon","addIngredients","state","action","updatedIngredients","ingredientName","updatedIngreidents","updatedState","removeIngredients","updatedIng","updatedIngs","updatedSt","setIngredients","fetchIngredientFail","reducer","type","ADD_INGREDIENTS","REMOVE_INGREDIENTS","SET_INGREDIENTS","FETCH_INGREDIENTS_FAILED"],"mappings":"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","sourcesContent":["import * as actionTypes from '../actions/actionTypes';\r\nimport {updateObject} from '../utility';\r\n\r\nconst initialState={\r\n    ingredients:null,\r\n        totalPrice:4,\r\n        error:false,\r\n        building:false\r\n};\r\nconst INGREDIENT_PRICES={\r\n    salad:0.5,\r\n    cheese:0.4,\r\n    meat:1.3,\r\n    bacon:0.7\r\n}; \r\n\r\nconst addIngredients=(state,action)=>{\r\n    const updatedIngredients={[action.ingredientName]:state.ingredients[action.ingredientName]+1}\r\n                const updatedIngreidents=updateObject(state.ingredients,updatedIngredients);\r\n                const updatedState={\r\n                    ingredients:updatedIngreidents,\r\n                    totalPrice:state.totalPrice + INGREDIENT_PRICES[action.ingredientName],\r\n                    building:true\r\n                }\r\n                return updateObject(state,updatedState);\r\n};\r\n\r\nconst removeIngredients=(state,action)=>{\r\n    const updatedIng={[action.ingredientName]:state.ingredients[action.ingredientName]-1}\r\n    const updatedIngs=updateObject(state.ingredients,updatedIng);\r\n    const updatedSt={\r\n        ingredients:updatedIngs ,\r\n        totalPrice:state.totalPrice + INGREDIENT_PRICES[action.ingredientName],\r\n        building:true\r\n    }\r\n    return updateObject(state,updatedSt);\r\n};\r\n\r\nconst setIngredients=(state,action)=>{\r\n    return updateObject(state,{\r\n        ingredients:{\r\n            salad: action.ingredients.salad,\r\n            bacon: action.ingredients.bacon,\r\n            cheese: action.ingredients.cheese,\r\n            meat: action.ingredients.meat\r\n        },\r\n        totalPrice:4,\r\n        error:false\r\n    });\r\n};\r\n\r\nconst fetchIngredientFail=(state,action)=>{\r\n    return updateObject(state,{error:true});\r\n};\r\nconst reducer=(state=initialState,action)=>{\r\n        switch(action.type){\r\n            case actionTypes.ADD_INGREDIENTS:return addIngredients(state,action);\r\n            case actionTypes.REMOVE_INGREDIENTS:return removeIngredients(state,action);\r\n            case actionTypes.SET_INGREDIENTS: return setIngredients(state,action); \r\n            case actionTypes.FETCH_INGREDIENTS_FAILED:return fetchIngredientFail(state,action);\r\n            default:\r\n                return state;\r\n        }\r\n};\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}