{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"E:\\\\ReactProjects\\\\myburger\\\\src\\\\containers\\\\Orders\\\\Orders.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Order from '../../components/Order/Order';\nimport axios from '../../axios-orders';\nimport withErrorHandler from '../../hoc/WithErrorHandler/withErrorHandler';\nimport * as actions from '../../store/actions/index';\n\nvar Orders = /*#__PURE__*/function (_Component) {\n  _inherits(Orders, _Component);\n\n  function Orders() {\n    _classCallCheck(this, Orders);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Orders).apply(this, arguments));\n  }\n\n  _createClass(Orders, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.onFetchOrders();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Order, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(Order, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return Orders;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    orders: state.order.orders\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onFetchOrders: function onFetchOrders() {\n      return dispatch(actions.onFetchOrders());\n    }\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(withErrorHandler(Orders, axios));","map":{"version":3,"sources":["E:/ReactProjects/myburger/src/containers/Orders/Orders.js"],"names":["React","Component","connect","Order","axios","withErrorHandler","actions","Orders","props","onFetchOrders","mapStateToProps","state","orders","order","mapDispatchToProps","dispatch"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,KAAP,MAAkB,8BAAlB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,gBAAP,MAA6B,6CAA7B;AACA,OAAO,KAAKC,OAAZ,MAAyB,2BAAzB;;IAEMC,M;;;;;;;;;;;wCAEiB;AACX,WAAKC,KAAL,CAAWC,aAAX;AACP;;;6BACQ;AACL,0BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,eAEI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADJ;AAMH;;;;EAZgBR,S;;AAerB,IAAMS,eAAe,GAAC,SAAhBA,eAAgB,CAAAC,KAAK,EAAE;AACzB,SAAM;AACFC,IAAAA,MAAM,EAACD,KAAK,CAACE,KAAN,CAAYD;AADjB,GAAN;AAGH,CAJD;;AAKA,IAAME,kBAAkB,GAAC,SAAnBA,kBAAmB,CAAAC,QAAQ,EAAE;AAC/B,SAAM;AACFN,IAAAA,aAAa,EAAE;AAAA,aAAIM,QAAQ,CAACT,OAAO,CAACG,aAAR,EAAD,CAAZ;AAAA;AADb,GAAN;AAGH,CAJD;;AAMA,eAAeP,OAAO,CAAC,IAAD,EAAMY,kBAAN,CAAP,CAAiCT,gBAAgB,CAAEE,MAAF,EAASH,KAAT,CAAjD,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Order from '../../components/Order/Order';\r\nimport axios from '../../axios-orders';\r\nimport withErrorHandler from '../../hoc/WithErrorHandler/withErrorHandler';\r\nimport * as actions from '../../store/actions/index';\r\n\r\nclass Orders extends Component {\r\n    \r\n    componentDidMount(){\r\n            this.props.onFetchOrders();\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Order />\r\n                <Order />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps=state=>{\r\n    return{\r\n        orders:state.order.orders\r\n    };\r\n};\r\nconst mapDispatchToProps=dispatch=>{\r\n    return{\r\n        onFetchOrders: ()=>dispatch(actions.onFetchOrders())\r\n    };\r\n};\r\n\r\nexport default connect(null,mapDispatchToProps)(withErrorHandler (Orders,axios));\r\n"]},"metadata":{},"sourceType":"module"}